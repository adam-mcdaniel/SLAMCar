#makesqlite

CFG ?= Debug

CC := /usr/bin/gcc

CFLAGS := -c -D__LINUX__ -DLUAPLUS_EXCEPTIONS

ifeq (Debug,$(findstring Debug,$(CFG)))
CFLAGS += -g -D_DEBUG
else
CFLAGS += -O2 -DNDEBUG
endif

DSTSO := libPX2Engine
ifeq (ARM,$(findstring ARM,$(CFG)))
DSTSO := libPX2EngineARM
endif

LIBPATH := ../../../PX2SDK/Library/$(CFG)

ifeq (Dynamic,$(findstring Dynamic,$(CFG)))
CFLAGS += -fPIC
AR := $(CC)
ARFLAGS := $(LDFLAGS) -L $(LIBPATH) -shared -fPIC -Wl,-soname,$(DSTSO).so -o
LIB := $(LIBPATH)/$(DSTSO).so
else
AR := /usr/bin/ar
ARFLAGS := rs
LIB := $(LIBPATH)/$(DSTSO).a
endif

INCPATH := \
    -I . \
	
INCDIR := ../../../PX2SDK/Include
	
FTINC := $(wildcard *.h)
FTINC := $(notdir $(INC))
INC := $(FTINC)

SRC1 := $(wildcard *.c)
SRC1 := $(notdir $(SRC1))

OBJDIR := ../../$(CFG)

FTOBJ1 := $(SRC1:%.c=$(OBJDIR)/%.o)

OBJ := $(FTOBJ1)

build : $(OBJ)
	$(AR) $(ARFLAGS) $(LIB) $(OBJDIR)/*.o

$(OBJDIR)/sqlite3.o : sqlite3.c
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

clean :
	rm -rf $(LIB)
	rm -rf $(OBJDIR)
