#OpenGLRenderer

CFG ?= Debug

CC := /usr/bin/g++

CFLAGS := -c -std=c++11 -D__LINUX__

ifeq (ARM,$(findstring ARM,$(CFG)))
CFLAGS += -DPX2_USE_OPENGLES
else
CFLAGS += -DPX2_USE_OPENGL
endif

ifeq (Debug,$(findstring Debug,$(CFG)))
CFLAGS += -g -D_DEBUG
else
CFLAGS += -O2 -DNDEBUG
endif

DSTSO := libPX2Engine
ifeq (ARM,$(findstring ARM,$(CFG)))
DSTSO := libPX2EngineARM
endif

LIBPATH := ../../../../PX2SDK/Library/$(CFG)

ifeq (Dynamic,$(findstring Dynamic,$(CFG)))
CFLAGS += -fPIC
AR := $(CC)
ARFLAGS := $(LDFLAGS) -L $(LIBPATH) -shared -fPIC -Wl,-soname,$(DSTSO).so -o
LIB := $(LIBPATH)/$(DSTSO).so
else
AR := /usr/bin/ar
ARFLAGS := rs
LIB := $(LIBPATH)/$(DSTSO).a
endif

INCPATH := \
    -I /usr/X11R6/include \
    -I /usr/include \
    -I . \
    -I ../../. \
    -I ../../../../PX2SDK/Include
	
INCDIR := ../../../../PX2SDK/Include

RENINC := ../../PX2Renderer.hpp ../../PX2Renderer.inl ../../PX2Renderers.hpp
OGLINC := $(wildcard PX2*.hpp)
OGLINC := $(notdir $(OGLINC))
OGLINC := $(OGLINC:%.hpp = %.hpp)
INC := $(RENINC) $(OGLINC)

RENSRC := ../../PX2Renderer.cpp
OGLSRC := $(wildcard *.cpp)
OGLSRC := $(notdir $(OGLSRC))

OBJDIR := ../../../$(CFG)
RENOBJ := $(OBJDIR)/PX2Renderer.o
OGLOBJ := $(OGLSRC:%.cpp=$(OBJDIR)/%.o)

OBJ := $(RENOBJ) $(OGLOBJ)

build : $(OBJ)
	$(AR) $(ARFLAGS) $(LIB) $(OBJDIR)/*.o
	cp -fp $(INC) $(INCDIR)

$(OBJDIR)/PX2Renderer.o : ../../PX2Renderer.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2GlxExtensions.o : PX2GlxExtensions.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@
	
$(OBJDIR)/PX2WglExtensions.o : PX2WglExtensions.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2GlExtensions.o : PX2GlExtensions.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2GlPlugin.o : PX2GlPlugin.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLIndexBuffer.o : PX2OpenGLIndexBuffer.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLMapping.o : PX2OpenGLMapping.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLPixelShader.o : PX2OpenGLPixelShader.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLRenderer.o : PX2OpenGLRenderer.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLRendererData.o : PX2OpenGLRendererData.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@
	
$(OBJDIR)/PX2OpenGLRendererInput.o : PX2OpenGLRendererInput.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLRenderTarget.o : PX2OpenGLRenderTarget.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLShader.o : PX2OpenGLShader.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLTexture1D.o : PX2OpenGLTexture1D.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLTexture2D.o : PX2OpenGLTexture2D.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLTexture3D.o : PX2OpenGLTexture3D.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLTextureCube.o : PX2OpenGLTextureCube.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLVerdanaS16B0I0.o : PX2OpenGLVerdanaS16B0I0.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLVertexBuffer.o : PX2OpenGLVertexBuffer.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLVertexFormat.o : PX2OpenGLVertexFormat.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(OBJDIR)/PX2OpenGLVertexShader.o : PX2OpenGLVertexShader.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@
	
$(OBJDIR)/PX2OpenGLVerdanaS16B0I0.o : PX2OpenGLVerdanaS16B0I0.cpp
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

clean :
	rm -rf $(LIB)
	rm -rf $(OBJDIR)
