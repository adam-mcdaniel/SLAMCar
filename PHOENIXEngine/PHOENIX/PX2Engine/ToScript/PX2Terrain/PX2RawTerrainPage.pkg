// PX2RawTerrainPage.pkg

	class RawTerrainPage : public TerrainPage
	{
	public:
		// size = 2^p + 1, p <= 7 (size = 3, 5, 9, 17, 33, 65, 129)
		RawTerrainPage (VertexFormat* vformat, int numVertexPage, float* heights,
			const Float2& origin, float spacing);
		virtual ~RawTerrainPage ();

		/// 将顶点高度信息保存到高程数据mHeights中
		/**
		* 在编辑器中修改顶点后将顶点高度转换到高程mHeights中
		*/
		void UpdateToHighField ();
		void UpdateHoles ();

		// 贴图
		void SetTexture (int index, Texture2D *texture); // 0-4
		void SetTexture0 (Texture2D *texture);
		void SetTexture0 (const std::string &texture0Filename);
		void SetTextureAlpha (Texture2D *texture);
		void SetTexture1 (Texture2D *texture);
		void SetTexture1 (const std::string &texture1Filename);
		void SetTexture2 (Texture2D *texture);
		void SetTexture2 (const std::string &texture2Filename);
		void SetTexture3 (Texture2D *texture);
		void SetTexture3 (const std::string &texture3Filename);
		void SetTexture4 (Texture2D *texture);
		void SetTexture4 (const std::string &texture4Filename);

		Texture2D *GetTexture(int index); //0,1,2,3,4
		Texture2D *GetTexture0 ();
		Texture2D *GetTextureAlpha ();
		Texture2D *GetTexture1 ();
		Texture2D *GetTexture2 ();
		Texture2D *GetTexture3 ();
		Texture2D *GetTexture4 ();

		void SetUV (int index, Float2 uv);
		void SetUV0 (Float2 uv);
		void SetUV1 (Float2 uv);
		void SetUV2 (Float2 uv);
		void SetUV3 (Float2 uv);
		void SetUV4 (Float2 uv);
		Float2 GetUV (int index);
		Float2 GetUV0 ();
		Float2 GetUV1 ();
		Float2 GetUV2 ();
		Float2 GetUV3 ();
		Float2 GetUV4 ();
	};