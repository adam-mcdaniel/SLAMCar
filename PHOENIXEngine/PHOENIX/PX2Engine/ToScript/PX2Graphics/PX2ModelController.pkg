// PX2ModelController.pkg

	class ModelController : public Controller
	{
	public:
		ModelController();
		virtual ~ModelController();
		
		static ModelController *New();
		static ModelController *New(const std::string &name);
		
		// Movable
	public:
		virtual void SetMovableFilename(const std::string &filename,
			bool shareVI = false);
		const std::string &GetMovableFilename() const;
		bool IsShareVI() const;
		
		virtual void SetMovable(Movable *mov);
		Movable *GetMovable();
		
		// 所有动作集中在一个文件中，通过配置文件加载进行配置
		void SetSkinAnimationConfig(const std::string &filename);
		void SetSkinAnimationConfig(const std::string &filename, Movable *animMovable);
		const std::string &GetSkinAnimationConfig() const;

		virtual void SetHeading(const AVector &heading);
		const AVector &GetHeading() const;

		void SetMovableUseAutoWorldBound(bool isUseAutoWorldBound);
		bool IsMovableUseAutoWorldBound() const;
		void SetMovableAutoWorldBoundRadius(float radius);
		float GetMovableAutoWorldBoundRadius() const;

		// Anchor
	public:
		void CollectAnchors();

		APoint GetAnchorPos(int id);
		Node *GetAnchor(int id);

		// anim
	public:
		// set it before add anim
		enum AnimType
		{
			AT_NONE,
			AT_FRAMES,
			AT_SKELETON,
			AT_MAX_TYPE
		};
		void SetAnimType(AnimType type);
		AnimType GetAnimType() const;

		bool AddAnim(Animation *anim);
		bool HasAnim(Animation *anim);
		bool HasAnim(const std::string &name);
		bool RemoveAnim(Animation *anim);
		bool RemoveAnim(const std::string &name);
		void RemoveAllAnims();
		int GetNumAnims() const;
		std::map<FString, AnimationPtr> &GetAnimsMap();
		Animation *GetAnimByName(const std::string &name);

		void SetDefaultAnim(const std::string &name);
		const std::string &GetDefaultAnimName() const;
		Animation *GetDefaultAnim();

		virtual void PlayAnim(Animation *anim);
		virtual Animation *PlayAnimByName(const std::string &name);
		virtual void StopAnim(Animation *anim);
		virtual void StopCurAnim();
		virtual void PlayCurAnim();

		Animation *GetCurPlayingAnim();
		bool IsHasAnimPlaying() const;
	};